stages:
  - build
  - notify-error

variables:
  DATE: 'date +%Y-%m-%d-%H-%M-%S'

build:
  stage: build
  tags:
    - builder
  image: docker:stable
  services:
    - docker:dind
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      variables:
        TAG: 'latest'
    - if: $CI_COMMIT_BRANCH == "dev"
      variables:
        TAG: 'latest-dev'
  script:
    - apk update && apk add curl
    - export CI_BUILD_DATE=$($DATE)
    - docker login -u ${REGISTRY_USER} -p ${REGISTRY_PASSWORD} ${REGISTRY_HOST}
    - docker build --no-cache -f Dockerfile -t ${IMAGE_NAME}:${TAG} --build-arg ENV_VALUE=${ENV_VALUE} .
    - docker push ${IMAGE_NAME}:${TAG}
    - docker logout ${REGISTRY_HOST}
    - docker system prune -a -f --volumes
    - 'curl -X POST -H "Content-Type: application/json" -d "{\"chat_id\": \"${TELEGRAM_CHAT_ID_DEVOPS}\", \"text\": \"${NOTIFY_TELEGRAM} ${NOTIFY_TELEGRAM_SUCCESS}\"}" ${TELEGRAM_API_BOT_TOKEN}'


notify_error:
  stage: notify-error
  image: docker:stable
  services:
    - docker:dind
  script:
    - apk update && apk add curl
    - 'curl -X POST -H "Content-Type: application/json" -d "{\"chat_id\": \"${TELEGRAM_CHAT_ID_DEVOPS}\", \"text\": \"${NOTIFY_TELEGRAM} ${NOTIFY_TELEGRAM_ERROR}\"}" ${TELEGRAM_API_BOT_TOKEN}'
  when: on_failure
